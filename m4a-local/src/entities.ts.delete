import { USER_OPTIONS } from "./options";   
import fs = require('fs');
import path = require('path');

const ENTITY_MAP = {};

// read all entities from the file
let entitiesFile = fs.readFileSync(USER_OPTIONS.resourcesPath + path.sep + '/entities.xml', 'utf8');
// parse entity objects, like <!ENTITY AE "&#x00C6;">
let lines = entitiesFile.split('\n');
lines.forEach(line => {
    let match = line.match(/^\s*<!ENTITY\s+([a-zA-Z]+) "(\&[#a-zA-Z0-9]+;)">/);
    if(match) {
        ENTITY_MAP['&'+match[1]+';'] = match[2];
    }
})

export function replaceEntities(content:any):string {
    let matches = content.match(/\&[a-zA-Z]+;/g);
    let entities = {}
    if(matches) {
        // remove duplicates
        matches.forEach(_m => entities[_m] = true);
        Object.keys(entities).forEach(_entity => {
            let def = ENTITY_MAP[_entity];
            if(!def) {
                console.log("Unresolved entity found: "+_entity);
                process.exit(-1);
            }
            // replace all occurrences of the entity
            content = content.replaceAll(_entity, def);
        });
    }

    return content;
}